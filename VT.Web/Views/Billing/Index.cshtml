@using Kendo.Mvc.UI
@using VT.Common
@using VT.Web.Models
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/LoggedInLayout.cshtml";
    var currentDay = DateTime.UtcNow;
    var firstDayOfMonth = new DateTime(currentDay.Year, currentDay.Month, 1);
    var lastDayOfMonth = firstDayOfMonth.AddMonths(1).AddDays(-1);

    var firstDay = firstDayOfMonth.ToString("o");
    var lastDay = lastDayOfMonth.ToString("o");
    var items = (IEnumerable<SelectListItem>)ViewData["Organizations"];
    var firstOrgName = items.Any() ? items.FirstOrDefault().Text : string.Empty;
}
 
@section PageLevelScripts
{
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/iCheck")
    <script src="@Url.Content("~/Scripts/app/billing.js")"></script>
    <script type="text/javascript">

        VT.Util.CustomMask("#CostOfService", 2);

        function getActionsInfo(item) {
            return [
                "<a class='change-status' data-id='" + item.ServiceRecordId + "' href='#dynamicModal'>Change Status</a>"
            ].join('');
        }

        function getCheckboxes(item) {
            return item.ShowCheckbox == false ? '' : '<input type="hidden" value="' + item.ServiceFeePercentage + '" id="ServiceFee-' + item.ServiceRecordId + '"></input>' +
                '<input type="hidden" value="' + item.TotalAmount + '" id="Amount-' + item.ServiceRecordId + '"></input>' +
                '<input type="checkbox" value="' + item.ServiceRecordId + '" class="serviceRecordCheck"></input>';
        }

        function additionalInfo() {
            return {
                id: $("#gridOrganization").val()
            }
        }

        $(document).on("click", ".attachment", function () {
            $.ajax({
                url: "/ServiceRecords/Attachments/" + $(this).data("id"),
                type: "POST",
                success: function (viewResult) {
                    if (viewResult.message) {
                        VT.Util.HandleLogout(viewResult.message);
                    }
                    $("#divAttachments").html(viewResult);
                    $("#modal-attachments").modal({
                        backdrop: 'static',
                        keyboard: false,
                        show: true
                    });
                }
            });
            return false;
        });

        function receivableOutstandings(value) {
            var kgrid;
            kgrid = $("#BillingListGrid").data("kendoGrid");
            $filter = new Array();

            if (value == 'month') {
                $filter.push({ field: "EndTime", operator: "ge", value: '@firstDay' });
                $filter.push({ field: "EndTime", operator: "le", value: '@lastDay' });
            }
            $filter.push({ field: "BilledToCompany", operator: "eq", value: false });
            kgrid.dataSource.filter($filter);

            $("#divSummary").addClass("hidden");

            return false;
        }

        function displayCostOrLink(item) {
            return item.CostOfService == null || item.CostOfService == 0.0 ?
                '<a href="#" class="edit-cost" data-id="' + item.ServiceRecordItemId + '" data-description="' + item.Description + '"> Set Cost</a>'
                : '$' + item.CostOfService.toFixed(2);
        }

        function getImageInfo(item) {
            return [
                "<a class='attachment' data-id='" + item.ServiceRecordItemId + "' href='#' title='View Images'><i class='fa fa-camera'></i></a>"
            ].join('');
        }

        function displayServiceName(item) {
            return "<span title='" + item.Description + "'>" + item.ServiceName + "</span>";
        }

        function dataSource_change() {
            var $checkbox = $(document).find(".all-checks");
            if ($checkbox.is(":checked")) {
                $checkbox.trigger("click");
            }
        }

        $("#gridOrganization").change(function () {
            var selectedText = $(this).find("option:selected").text();
            $(".chargeCustomer").html("<i class='fa fa-money'></i> Charge <b>" + selectedText + "'s</b> Company Card");
        })

    </script>
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2> UNCOLLECTED COMMISSIONS </h2>
    </div>
    <div class="col-lg-2">
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel-body">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>ALL UNCOLLECTED COMMISSIONS</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                        </div>
                    </div>
                    <div class="ibox-content"> 
                        <div class="row m-b-md m-t">
                            <div class="col-lg-12 no-padding">
                                <div class="col-lg-6">
                                    <div class="left-inner-addon">
                                        <i class="fa fa-search"></i>
                                        <input id="gridsearch" type="search" data-grid="BillingListGrid" placeholder="Search Grid..." class="form-control">
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    @if (ViewData["Organizations"] != null)
                                    { 
                                        <select id="gridOrganization" data-dd="organizations" class="form-control pull-right" style="width: 150px; margin-right: 7px" data-grid="BillingListGrid">
                                            @foreach (var item in items)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                        <span style="margin-right: 5px; margin-top: 3px;" class="pull-right">Organization:</span>
                                    } 
                                </div>

                            </div>
                        </div>
                        <div class="clearfix"></div>

                        @(Html.Kendo().Grid<ServiceRecordDetail>()
                                      .Name("BillingListGrid")
                                      .Filterable()
                                      .Sortable()
                                      .Columns(columns =>
                                      {

                                      columns.Bound(o => o.ServiceRecordId).Title("")
                                          .HeaderTemplate("<input type='checkbox'  class='all-checks'></input>")
                                          .ClientTemplate("#= getCheckboxes.apply(this, arguments) #")
                                          .Sortable(false)
                                          .Filterable(false);
                                      columns.Bound(o => o.ServiceRecordId).Title("Id")
                                          .ClientTemplate("<a href='/Billing/Download/#= ServiceRecordId #'>#= ServiceRecordId # </a>")
                                          .Width(75).Filterable(false);
                                      columns.Bound(o => o.CustomerName).Title("Customer");
                                      columns.Bound(o => o.CompanyWorkerEmail).Title("Employee");

                                      columns.Bound(o => o.EndTime).ClientTemplate("#=kendo.toString(EndTime,'MM/dd/yyyy HH:mm')#").Title("Service Date");
                                      columns.Bound(o => o.InvoiceDate).ClientTemplate("#=InvoiceDate == null ? '' : kendo.toString(InvoiceDate,'MM/dd/yyyy HH:mm')#").Title("Invoice Date");
                                      columns.Bound(o => o.TotalAmount).Title("Total Amount").Format("{0:c}");
                                      columns.Bound(o => o.Status).Title("Status");
                                      columns.Bound(o => o.BilledToCompany).Title("Commission <br/> Collected?")
                                          .ClientTemplate("<span class='label label-#= BilledToCompanyCss #'>#= BilledToCompanyText # </span>").Visible(false);
                                      columns.Bound(o => o.TransactionId).Title("Trans Id").Visible(false);
                                      columns.Bound(o => o.HasNonService).Title("Missing <br/> Prices?")
                                          .ClientTemplate("<span class='label label-#= HasNonServiceCss #'>#= HasNonServiceText # </span>");
                                      columns.Template(@<text></text>).Title("Actions")
                                              .ClientTemplate("#= getActionsInfo.apply(this, arguments) #").Visible(!User.IsInRole(UserRoles.SuperAdmin.ToString()));
                                      })
                                      .ToolBar(toolbar =>
                                      {
                                          toolbar.Template(@<text>
                                        @*<div class="toolbar">
                                        <a href="javascript:void(0)" onclick="return VT.Util.ClearAllKendoGridFilter('#BillingListGrid');" class="btn btn-primary btn-sm btn-rounded">Clear Filters</a>
                                        <a href="javascript:void(0)" onclick="return receivableOutstandings('');" class="btn btn-primary btn-sm btn-rounded">All Outstanding Receivables</a>
                                        <a href="javascript:void(0)" onclick="return receivableOutstandings('month');" class="btn btn-primary btn-sm btn-rounded">Outstanding Receivables (This Month)</a>
                                    </div>*@
                                        </text>);
                                      })
                                      .Events(events => events.DataBound("VT.Util.ConnectKendoGrids"))
                                      .NoRecords("No data found.")
                                      .DataSource(dataSource => dataSource
                                          .Ajax()
                                          //.PageSize(10)
                                          .Model(model => model.Id(p => p.ServiceRecordId))
                                          .Events(x => x.Change("dataSource_change"))
                                          .Read(read => read.Action("GetServiceRecords", "Billing").Data("additionalInfo"))
                                      )
                                      .ClientDetailTemplateId("ServiceRecordItemListTemplate")
                        )
                    </div>
                </div>
            </div> 
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 hidden" id="divSummary">
            <div class="wrapper wrapper-content animated fadeInUp">
                <div class="ibox">
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="m-b-md">
                                    <h2>Billing Summary</h2>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-5">
                                <dl class="dl-horizontal">
                                    <dt>Total Amount:</dt>
                                    <dd><span id="sTotalAmount"></span></dd>
                                </dl>
                            </div>
                            <div class="col-lg-5">
                                <dl class="dl-horizontal">
                                    <dt>
                                        Service Fee Amount:
                                        <input type="hidden" id="totalServiceFeeAmount" />
                                    </dt>
                                    <dd><span id="sServiceFee"></span></dd>
                                </dl>
                            </div> 
                        </div>
                        <div class="row">
                            <div class="col-lg-12 pull-right">
                                <input type="hidden" id="serviceRecordIds" />
                                <a href="#" class="btn btn-info btn-rounded btn-outline chargeCustomer"><i class="fa fa-money"></i> Charge <b>@(firstOrgName)'s</b> Company Card</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@Html.Partial("ChangeStatus", new ChangeStatusViewModel())

@Html.Partial("ConfirmModal", new ModalViewModal
{
    Id = "modal-charge-form",
    IsAlertModel = false,
    Title = "Charge Customer?",
    Message = ""
})

@Html.Partial("SetCost", new SetServiceRecordItemCostModel())

<div id="divAttachments">
    <!--Load dynamic content through ajax-->
</div>

<script id="ServiceRecordItemListTemplate" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<ServiceRecordItemDetail>()
          .Name("ServiceRecordItemListGrid_#=ServiceRecordId#")
          .HtmlAttributes(new { @class = "recordItems", @title = "Services Performed" })
          .Sortable()
          .Columns(columns =>
          {
          columns.Bound(o => o.ServiceRecordId).Title("ID").Visible(false).Filterable(false);
          columns.Bound(o => o.ServiceRecordItemId).Visible(false); ;
          columns.Template(@<text></text>).Title("Service")
                           .ClientTemplate("\\#= displayServiceName.apply(this, arguments) \\#").Width(200);
          columns.Bound(o => o.Description).Title("Description").Width(500); 
          columns.Bound(o => o.CostOfService).Title("Cost").Width(75);
          columns.Template(@<text></text>).Title("Actions")
                           .ClientTemplate("\\#= getImageInfo.apply(this, arguments) \\#").Width(75);
          })
                    .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Model(model => model.Id(p => p.ServiceRecordItemId))
                                                    .Read(read => read.Action("GetServiceRecordItems", "Billing", new { id = "#=ServiceRecordId#" }))
                                                    .Events(events => events
                                                    //Subscribe to the "change" event.
                                                    .Change("dataSource_change")

            )
          )
          .ToClientTemplate())
</script>

<script type="text/javascript">
    $(function () {
        $('#BillingListGrid').data('kendoGrid');
    });

    $(function () {
        $('#ServiceRecordListGrid').data('kendoGrid');
    });
</script>

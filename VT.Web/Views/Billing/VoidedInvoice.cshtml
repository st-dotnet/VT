@using Kendo.Mvc.UI
@using VT.Common
@using VT.Web.Models

@{
    ViewBag.Title = "VOID INVOICES";
    Layout = "~/Views/Shared/LoggedInLayout.cshtml";
    var currentDay = DateTime.UtcNow;
    var firstDayOfMonth = new DateTime(currentDay.Year, currentDay.Month, 1);
    var lastDayOfMonth = firstDayOfMonth.AddMonths(1).AddDays(-1);

    var firstDay = firstDayOfMonth.ToString("o");
    var lastDay = lastDayOfMonth.ToString("o");
    var customIdentity = (CustomIdentity)User.Identity;
}

@section PageLevelScripts
{
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/iCheck")
    <script src="@Url.Content("~/Scripts/app/billing.js")"></script>

    <script type="text/javascript">

        VT.Util.CustomMask("#CostOfService", 2);

        function getActionsInfo(item) {
            return [
                "<a class='change-status' data-id='" + item.ServiceRecordId + "' href='#dynamicModal'>Change Status</a>"
            ].join('');
        }

        function getCheckboxes(item) {
            return item.ShowCheckbox == false ? '' : '<input type="hidden" value="' + item.ServiceFeePercentage + '" id="ServiceFee-' + item.ServiceRecordId + '"></input>' +
                '<input type="hidden" value="' + item.TotalAmount + '" id="Amount-' + item.ServiceRecordId + '"></input>' +
                '<input type="checkbox" value="' + item.ServiceRecordId + '" class="serviceRecordCheck"></input>';
        }

        function additionalInfo() {
            return {
                id: $("#gridOrganization").val()
            }
        }

        $(document).on("click", ".attachment", function () {
            $.ajax({
                url: "/ServiceRecords/Attachments/" + $(this).data("id"),
                type: "POST",
                success: function (viewResult) {
                    if (viewResult.message) {
                        VT.Util.HandleLogout(viewResult.message);
                    }
                    $("#divAttachments").html(viewResult);
                    $("#modal-attachments").modal({
                        backdrop: 'static',
                        keyboard: false,
                        show: true
                    });
                }
            });
            return false;
        });

        function receivableOutstandings(value) {
            var kgrid;
            kgrid = $("#BillingListGrid").data("kendoGrid");
            $filter = new Array();

            if (value == 'month') {
                $filter.push({ field: "EndTime", operator: "ge", value: '@firstDay' });
                $filter.push({ field: "EndTime", operator: "le", value: '@lastDay' });
            }
            $filter.push({ field: "BilledToCompany", operator: "eq", value: false });
            kgrid.dataSource.filter($filter);

            $("#divSummary").addClass("hidden");

            return false;
        }

        function displayCostOrLink(item) {
            return item.CostOfService == null || item.CostOfService == 0.0 ?
                '<a href="#" class="edit-cost" data-id="' + item.ServiceRecordItemId + '" data-description="' + item.Description + '"> Set Cost</a>'
                : '$' + item.CostOfService.toFixed(2);
        }

        function getImageInfo(item) {
            return [
                "<a class='attachment' data-id='" + item.ServiceRecordItemId + "' href='#' title='View Images'><i class='fa fa-camera'></i></a>"
            ].join('');
        }

        function getAmount(item) {
            var txnText = (item.TransactionId != null && item.TransactionId.length > 0)
                ? " <button type='button' class='btn btn-primary btn-xs' data-toggle='popover' data-placement='top' data-content='" + item.TransactionId + "'>TRNS</button>" : "";
            return "<div>" + item.TotalAmountFormat + "&nbsp;&nbsp;" + txnText + "</div>";
        }

        function getTransactionInfo(item) {
            return item.Status == "PAID BY CC" ?
                "<a class='attachment' data-id='" + item.ServiceRecordId + "' href='#' title='Void/Refund Transaction'>" + item.TransactionId + " <i class='fa fa-undo'></i></a>" :
                item.TransactionId;
        }

        function displayServiceName(item) {
            return "<span title='" + item.Description + "'>" + item.ServiceName + "</span>";
        }

        function dataSource_change() {
            var $checkbox = $(document).find(".all-checks");
            if ($checkbox.is(":checked")) {
                $checkbox.trigger("click");
            }
        }
        function getServiceDate(item) {
            return item.ShowDate;
        }
        function getInvoiceDate(item) {
            return item.InvoiceDateStr;
        }
        function getVoidDate(item) {
            return item.VoidTimeStr;
        }
    </script>
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>VOID INVOICES</h2>
    </div>
    <div class="col-lg-2">
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel-body">
                <div class="col-lg-12">
                    <div class="ibox float-e-margins">
                        <div class="ibox-title">
                            <h5>ALL VOIDED INVOICES</h5>
                            @*<div class="pull-right">
                                    <a href="#" id="voidinvoicesExport"><i class="fa fa-download"></i> Export</a>
                                </div>*@
                        </div>
                        <div class="ibox-content">
                            <div class="row m-b-md m-t">
                                <div class="col-lg-12 no-padding">
                                    <div class="col-lg-6">
                                        <div class="left-inner-addon">
                                            <i class="fa fa-search"></i>
                                            <input id="gridsearch" type="search" data-grid="BillingListGrid" placeholder="Search Grid..." class="form-control">
                                        </div>
                                    </div>
                                    <div class="col-lg-6">
                                        @if (ViewData["Organizations"] != null)
                                        {
                                            var items = (IEnumerable<SelectListItem>)ViewData["Organizations"];
                                            <select id="gridOrganization" data-dd="organizations" class="form-control pull-right" style="width: 250px; margin-right: 7px" data-grid="VoidInvoiceViewGrid">
                                                @foreach (var item in items)
                                                {
                                                    <option value="@item.Value">@item.Text</option>
                                                }
                                            </select>
                                            <span style="margin-right: 5px; margin-top: 3px;" class="pull-right">Organization:</span>
                                        }
                                        else
                                        {
                                            <input type="hidden" id="gridOrganization" value="@customIdentity.CompanyId" />
                                        }
                                        @*@if (!User.IsInRole(UserRoles.CompanyUser.ToString()))
                                            {
                                                if (ViewData["Customers"] != null)
                                                {
                                                    var items = (IEnumerable<SelectListItem>
                                                        )ViewData["Customers"];

                                                    <select id="gridOrganization" data-dd="customers" class="form-control pull-right" style="width: 250px; margin-right: 7px" data-grid="VoidInvoiceViewGrid">
                                                        @foreach (var item in items)
                                                        {
                                                            <option value="@item.Value">@item.Text</option>
                                                        }
                                                    </select>
                                                    <span style="margin-right: 5px; margin-top: 3px;" class="pull-right">Customers:</span>
                                                }
                                            }*@

                                    </div>
                                </div>
                            </div>

                            @(Html.Kendo().Grid<ServiceRecordDetail>()
                                .Name("VoidInvoiceViewGrid")
                                .Pageable(page => page
                                    .Info(true)
                                    .ButtonCount(5)
                                    .Messages(message => message
                                        .Empty("No data")
                                        .Next("Next")
                                        .Previous("Previous")
                                        .First("First")
                                        .Last("Last")
                                    )
                                )
                                .Sortable()
                                .Columns(columns =>
                                {
                                    columns.Bound(o => o.ServiceRecordId).Title("Id")
                                    .ClientTemplate("<a href='/Billing/Download/#= ServiceRecordId #' target='_blank'>#= ServiceRecordId # </a>")
                                    .Width(75).Filterable(false);
                                    columns.Bound(o => o.CompanyName).Title("Organization").Visible(User.IsInRole(UserRoles.CompanyUser.ToString()));
                                    columns.Bound(o => o.CustomerName).Title("Customer");
                                    columns.Bound(o => o.CompanyWorkerEmail).Title("Employee");
                                    columns.Bound(o => o.EndTime).ClientTemplate("#=kendo.toString(EndTime,'MM/dd/yyyy')#").Title("Service Date")
                                        .HtmlAttributes(new { title = "#= getServiceDate.apply(this, arguments) #" });

                                    columns.Bound(o => o.InvoiceDate).ClientTemplate("#= InvoiceDate == null ? '' : kendo.toString(InvoiceDate,'MM/dd/yyyy')#").Title("Invoice Date")
                                        .HtmlAttributes(new { title = "#= getInvoiceDate.apply(this, arguments) #" });

                                    columns.Bound(o => o.Status).Title("Previous Status");
                                    columns.Template(@<text></text>).Title("Amount").ClientTemplate("#= getAmount.apply(this, arguments) #");
                                    columns.Bound(o => o.VoidTime).ClientTemplate("#= VoidTime == null ? '' : kendo.toString(VoidTime,'MM/dd/yyyy')#").Title("Void On")
                                        .HtmlAttributes(new { title = "#= getVoidDate.apply(this, arguments) #" });
                                })
                                .Events(events => events.DataBound("VT.Util.ConnectKendoGrids"))
                                .NoRecords("No data found.")
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(10)
                                .Model(model => model.Id(p => p.ServiceRecordId))
                                .Read(read => read.Action("GetVoidInvoiceServicesList", "Billing").Data("additionalInfo"))
                                )
                                .ClientDetailTemplateId("ServiceRecordItemListTemplate")
                            )
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </div>

</div>

@Html.Partial("ChangeStatus", new ChangeStatusViewModel())


<div id="divAttachments">
    <!--Load dynamic content through ajax-->
</div>

<script id="ServiceRecordItemListTemplate" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<ServiceRecordItemDetail>()
                          .Name("ServiceRecordItemListGrid_#=ServiceRecordId#")
                          .HtmlAttributes(new { @class = "recordItems", @title = "Services Performed" })
                          .Sortable()
                          .Columns(columns =>
                          {
                              columns.Bound(o => o.ServiceRecordId).Title("ID").Visible(false).Filterable(false);
                              columns.Bound(o => o.ServiceRecordItemId).Visible(false); ;
                              columns.Template(@<text></text>).Title("Service")
                                               .ClientTemplate("\\#= displayServiceName.apply(this, arguments) \\#").Width(200);
                                    columns.Bound(o => o.Description).Title("Description").Width(500);
                                    columns.Bound(o => o.CostOfService).Title("Cost").Width(75);
                                    columns.Template(@<text></text>).Title("Actions")
                                             .ClientTemplate("\\#= getImageInfo.apply(this, arguments) \\#").Width(75);
                                        })
                                                                .DataSource(dataSource => dataSource
                                                                                .Ajax()
                                                                                .Model(model => model.Id(p => p.ServiceRecordItemId))
                                                                                                .Read(read => read.Action("GetServiceRecordItems", "Billing", new { id = "#=ServiceRecordId#" }))
                                                                                                .Events(events => events
                                                                                                //Subscribe to the "change" event.
                                                                                                .Change("dataSource_change")

                                                        )
                                                      )
                                                      .ToClientTemplate())
</script>

<script type="text/javascript">
    $(function () {
        $('#VoidInvoiceViewGrid').data('kendoGrid');
    });
</script>

@using Kendo.Mvc.UI
@using VT.Common
@using VT.Web.Models

@{
    ViewBag.Title = "Company Services";
    Layout = "~/Views/Shared/LoggedInLayout.cshtml";
    var customIdentity = (VT.Common.CustomIdentity)User.Identity;
    var canSee = (bool)ViewBag.CanSee;
}

@section PageLevelScripts
{
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/iCheck")
    <script src="@Url.Content("~/Scripts/app/companyservice.js")"></script>

    <script type="text/javascript">

        function getActionsInfo(item) {
            return [
                (item.IsActive == true ? "<a class='edit-companyservice' data-id='" + item.Id + "' href='#dynamicModal'><i class='fa fa-edit'></i> </a>" : "") +
                "<a class='view-companyservice' data-id='" + item.Id + "' href='#dynamicModal'><i class='fa fa-eye'></i> </a>" +
                (item.IsActive == false ? "<a class='undelete-companyservice' data-id='" + item.Id + "' href='#'><i class='fa fa-undo'></i></a>" : "")
            ].join('');
        }

        function getActiveInfo(item) {
            return "<span class='label label-" + item.IsActiveCss + "'>" + item.IsActiveText + "</span>";
        }

        function getCompanyName(item) {
            return (item.IsCompanyDeleted == true) ? "<i style=color:red;>" + item.CompanyName + "</i>" : item.CompanyName;
        }

        function getCheckbox(item) {
            return item.IsActive ? "<input type='checkbox' value='" + item.Id + "' class='i-checks' ></input>" :
                "<input type='checkbox' value='" + item.Id + "' class='i-checks' disabled ></input>";
        }
        function getCompanyServiceName(item) {
            return (item.IsDeleted == true) ? "<i style=color:red;>" + item.Name + "</i>" : item.Name;
        }

        // for super administrator.
        function getToggleSuperAdministrator(item) {
            if (item.IsActive) {
                return "<a class='btn-icon-only btn-default companyservice-deactivate' data-id='" + item.Id + "' href='#' data-toggle='tooltip' title='Inactive'><i class='fa fa-toggle-on fa-3x' aria-hidden='true'></i></a> &nbsp;";
            }
            else {
                return "<a class='btn-icon-only btn-default companyservice-activate' data-id='" + item.Id + "' href='#' data-toggle='tooltip' title='Active'><i class='fa fa-toggle-off fa-3x' aria-hidden='true'></i></a> &nbsp;";
            }
        }
        function onRead(o) {
            return {
                additionalInfo: $("#gridItemStatus").val()
            };
        }
    </script>
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>COMPANY SERVICES</h2>
    </div>
    <div class="col-lg-2">
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>ALL COMPANY SERVICES</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div>
                @if (canSee)
                {
                    <div class="ibox-content">
                        <div class="">
                            <a href="#modal-add-cs-form" data-toggle="modal" class="btn btn-info btn-rounded btn-outline "><i class="fa fa-plus"></i> &nbsp; Add Company Service</a>
                            <a href="#modal-del-cs-form" id="btnDeleteCs" class="btn btn-danger btn-rounded btn-outline"><i class="fa fa-trash"></i> &nbsp; Deactivate Company Service(s)</a>
                        </div>
                        @Html.Partial("GridHeader", "CompanyServiceListGrid")

                        @(Html.Kendo().Grid<CompanyServiceListViewModel>()
                          .Name("CompanyServiceListGrid")
                          .Reorderable(x => x.Columns(true))
                          .Pageable(page => page
                              .Info(true)
                              .ButtonCount(5)
                              .Messages(message => message
                                  .Empty("No data")
                                  .Next("Next")
                                  .Previous("Previous")
                                  .First("First")
                                  .Last("Last")
                              )
                          )
                          .Sortable()
                          .Filterable()
                          .Columns(columns =>
                          {
                              columns.Bound(x => x.Id).Title("")
                                  .ClientTemplate("#= getCheckbox.apply(this, arguments) #").Filterable(false);

                              columns.Bound(x => x.CompanyId).Visible(false);
                              //columns.Bound(x => x.CompanyName).Visible(User.IsInRole(UserRoles.SuperAdmin.ToString())).Title("Organization").Filterable(ftb => ftb.Multi(true));
                              columns.Template(@<text></text>).Title("Company Name").Visible(User.IsInRole(UserRoles.SuperAdmin.ToString()))
                                                       .ClientTemplate("#= getCompanyName.apply(this, arguments) #");
                          columns.Template(@<text></text>).Title("Name").ClientTemplate("#= getCompanyServiceName.apply(this, arguments) #");

                          columns.Bound(x => x.Description).Title("Description");
                          columns.Template(@<text></text>).Title("<b>Active? </b>")
                                 .ClientTemplate("#= getToggleSuperAdministrator.apply(this, arguments) #");

                            @*columns.Template(@<text></text>)
                                .Title("Is Active")
                                .ClientTemplate("#= getActiveInfo.apply(this, arguments) #");*@

                        columns.Template(@<text></text>)
                                  .Title("Actions")
                                  .ClientTemplate("#= getActionsInfo.apply(this, arguments) #");
                          })
                                  .Events(events => events.DataBound("VT.Util.ConnectKendoGrids"))
                                  .NoRecords("No data found.")
                                  .DataSource(dataSource => dataSource
                                      .Ajax()
                                      .PageSize(10)
                                      .Model(model => model.Id(p => p.Id))
                                      .Read(read => read.Action("CompanyServiceList", "CompanyServices").Data("onRead")))
                        )

                        @Html.Partial("ConfirmModal", new ModalViewModal
                   {
                       Id = "modal-del-cs-form",
                       IsAlertModel = false,
                       Title = "Deactivate Company Service(s)",
                       Message = "Are you sure you want to deactivate the selected service(s)?"
                   })

                        @Html.Partial("ConfirmModal", new ModalViewModal
                   {
                       Id = "modal-undelete-form",
                       IsAlertModel = false,
                       Title = "Activate Company Service",
                       Message = "Are you sure you want to activate this service?",
                       BtnId = "btnUndeleteService",
                       HiddenElementId = "hdnCompanyServiceId"
                   })
                    </div>
                }
                else
                {
                    <div class="ibox-content">
                        <div class="alert alert-danger">
                            @(ViewBag.Message)
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="row" id="divcsDetails">

    </div>

</div>

@Html.Partial("AddCompanyService", new SaveCompanyServiceModel
{
    CompanyId = customIdentity.CompanyId
})

<div id="divAttachments">
    <!--Load dynamic content through ajax-->
</div>

@Html.Partial("ConfirmModal", new ModalViewModal
{
    Id = "modal-activate-companyservice-form",
    IsAlertModel = false,
    Title = "Activate Service",
    Message = "Are you sure you want to activate this service?",
    HiddenElementId = "hdnActivateServiceId",
    BtnId = "btnActivateService"
})

@Html.Partial("ConfirmModal", new ModalViewModal
{
    Id = "modal-deactivate-companyservice-form",
    IsAlertModel = false,
    Title = "Deactivate Service",
    Message = "Are you sure you want to deactivate this service?",
    HiddenElementId = "hdnDeactiveServiceId",
    BtnId = "btnDeactivateService"
})

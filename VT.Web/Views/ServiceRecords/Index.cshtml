@using Kendo.Mvc.UI
@using VT.Common
@using VT.Web.Models
@{
    ViewBag.Title = "Service Records";
    Layout = "~/Views/Shared/LoggedInLayout.cshtml";
}

@section PageLevelScripts
{
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/iCheck")
    <script type="text/javascript">
        function getImageInfo(item) {
            return [
                "<a class='attachment' data-id='" + item.ServiceRecordItemId + "' href='#' title='View Images'><i class='fa fa-camera'></i></a>"
            ].join('');
        }
        function getServiceDate(item) {
            
            return item.ShowDate;
        }
        function getInvoiceDateitem(item) {
            
            return item.InvoiceFormateDate;
        }
        function getActionsInfo(item) {
            
            return [
                "<a class='btn btn-info btn-rounded btn-outline set-void' data-id='" + item.ServiceRecordId + "' href='#'>VOID</a>"
            ].join('');
        }
        function getCompanyName(item) {
            return (item.IsCompanyDeleted == true) ? "<i style=color:red;>" + item.CompanyName + "</i>" : item.CompanyName;
        }
        function getEmployeeName(item) {
            return (item.IsEmployeeDeleted == true) ? "<i style=color:red;>" + item.CompanyWorkerEmail + "</i>" : item.CompanyWorkerEmail;
        }
        function getCustomerName(item) {
            return (item.IsCustomerDeleted == true) ? "<i style=color:red;>" + item.CustomerName + "</i>" : item.CustomerName;
        }
        function getAmount(item) {
            var txnText = (item.TransactionId != null && item.TransactionId.length > 0)
                ? " <button type='button' class='btn btn-primary btn-xs pull-right' data-toggle='popover' data-placement='top' data-content='" + item.TransactionId + "'>TRNS</button>" : "";
            return "<div>" + item.AmountStr + "&nbsp;&nbsp;" + txnText + "</div>";
        }
        function displayCostOrLink(item) {
            return item.CostOfService == null || item.CostOfService == 0.0 ?
                '<a href="#" class="edit-cost" data-id="' + item.ServiceRecordItemId + '" data-description="' + item.Description + '"> Set Cost</a>'
                : '$' + item.CostOfService.toFixed(2);
        }
        $(document).on("click", ".attachment", function () {
            $.ajax({
                url: "/ServiceRecords/Attachments/" + $(this).data("id"),
                type: "POST",
                success: function (viewResult) {
                    if (viewResult.message) {
                        VT.Util.HandleLogout(viewResult.message);
                    }
                    $("#divAttachments").html(viewResult);
                    $("#modal-attachments").modal({
                        backdrop: 'static',
                        keyboard: false,
                        show: true
                    });
                }
            });
            return false;
        });

        $(document).on('click', '.set-void', function () {
            var serviceId = $(this).data("id");
            $("#hdnEntityId").val(serviceId);
            $("#void-service-activity-modal").modal({
                backdrop: 'static',
                keyboard: false,
                show: true
            });
        });

        $("#btnModalSubmit").click(function () {
            var buttonText = $("#btnModalSubmit").html();
            $("#btnModalSubmit").attr('disabled', '').html('<i class="fa fa-spinner fa-spin"></i>&nbsp; ' + buttonText);
            $.ajax({
                url: '/ServiceRecords/VoidServiceActivity',
                type: "POST",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ ServiceId: $("#hdnEntityId").val() }),
                success: function (result) {
                    if (result.success) {
                        VT.Util.Notification(true, "Service record has been voided successfully.");
                        $("#void-service-activity-modal").modal("hide");
                        //refresh grid
                        var grid = $("#ServiceRecordListGrid").data("kendoGrid");
                        grid.dataSource.read();
                    } else {
                        VT.Util.HandleLogout(result.message);
                        VT.Util.Notification(false, "Some error occured while voiding service record.");
                    }

                    $("#btnModalSubmit").attr('disabled', null).html(buttonText);
                },
                error: function (xhr, status, error) {
                    VT.Util.Notification(false, error);
                    $("#btnModalSubmit").attr('disabled', null).html(buttonText);
                }
            });
        });

        $(document).on('click', '.edit-cost', function () {
            var serviceItemId = $(this).data("id");
            var description = $(this).data("description");

            $("#description").html(description);
            $("#ServiceRecordItemId").val(serviceItemId);

            $("#set-cost-modal").modal({
                backdrop: 'static',
                keyboard: false,
                show: true
            });
        });

        var setCostForm = $("#setCostForm").validate({
            rules: {
                CostOfService: {
                    required: true
                },

            },
            submitHandler: function (form) {
                var buttonText = $("#btnSetCost").html();
                $("#btnSetCost").attr('disabled', '').html('<i class="fa fa-spinner fa-spin"></i>&nbsp; ' + buttonText);

                $(form).ajaxSubmit({
                    success: function (data) {
                        if (data && data.success) {
                            $("#set-cost-modal").modal("hide");
                            //refresh grid
                            var grid = $("#ServiceRecordListGrid").data("kendoGrid");
                            grid.dataSource.read();

                            VT.Util.Notification(true, "Cost successfully saved.");
                        } else {
                            VT.Util.HandleLogout(data.message);
                            $('#setCostForm .alert-danger').removeClass("hide").find(".error-message").html(data.message);
                            VT.Util.Notification(false, "Some error occured while saving saving cost.");
                        }

                        $("#btnSetCost").attr('disabled', null).html(buttonText);
                        $(form).resetForm();
                    },
                    error: function (xhr, status, error) {
                        $("#btnSetCost").attr('disabled', null).html(buttonText);
                    }
                });
                return false;
            }
        });

    </script>
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>SERVICE RECORDS</h2>
    </div>
    <div class="col-lg-2">
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>ALL SERVICE RECORDS</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    @*<div class="">
                            <a href="#modal-add-org-form" data-toggle="modal" class="btn btn-info btn-rounded btn-outline "><i class="fa fa-plus"></i> &nbsp; Add Organization</a>
                            <a href="#modal-del-org-form" id="btnDeleteOrg" class="btn btn-danger btn-rounded btn-outline"><i class="fa fa-trash"></i> &nbsp; Delete Organization</a>
                        </div>*@

                    @Html.Partial("GridHeader", "ServiceRecordListGrid")

                    @(Html.Kendo().Grid<ServiceRecordDetail>()
                          .Name("ServiceRecordListGrid")
                          .Pageable(page => page
                              .Info(true)
                              .ButtonCount(5)
                              .Messages(message => message
                                  .Empty("No data")
                                  .Next("Next")
                                  .Previous("Previous")
                                  .First("First")
                                  .Last("Last")
                              )
                          )
                          .Filterable()
                          .Sortable()
                          .Columns(columns =>
                          {
                          columns.Bound(o => o.ServiceRecordId).Title("Id")
                              .ClientTemplate("<a href='/Billing/Download/#= ServiceRecordId #'>#= ServiceRecordId # </a>")
                              .Width(75).Filterable(false);
                          //columns.Bound(o => o.CompanyName).Title("Organization").Visible(User.IsInRole(UserRoles.SuperAdmin.ToString()));
                          columns.Template(@<text></text>).Visible(User.IsInRole(UserRoles.SuperAdmin.ToString())).Title("Organization").ClientTemplate("#= getCompanyName.apply(this, arguments) #");
                          columns.Template(@<text></text>).Title("Customer").ClientTemplate("#= getCustomerName.apply(this, arguments) #");
                      
                          columns.Template(@<text></text>).Title("Employee").ClientTemplate("#= getEmployeeName.apply(this, arguments) #");
                          columns.Bound(o => o.EndTime).ClientTemplate("#=kendo.toString(EndTime,'MM/dd/yyyy')#").Title("Service")
                              .HtmlAttributes(new { title = "#= getServiceDate.apply(this, arguments) #" });
                          columns.Bound(o => o.InvoiceDate).ClientTemplate("#=InvoiceDate == null ? '' : kendo.toString(InvoiceDate,'MM/dd/yyyy')#").Title("Invoice")
                                    .HtmlAttributes(new { title = "#= getInvoiceDateitem.apply(this, arguments) #" });
                          columns.Bound(o => o.Status).Title("Status");
                          columns.Template(@<text></text>).Title("Amount").ClientTemplate("#= getAmount.apply(this, arguments) #");
                          columns.Bound(o => o.HasNonService).Title("Missing<br/> Prices?")
                          .ClientTemplate("<span class='label label-#= HasNonServiceCss #'>#= HasNonServiceText # </span>");
                          columns.Template(@<text></text>).Title("Action").ClientTemplate("#= getActionsInfo.apply(this, arguments) #");
                          })
                          .ToolBar(toolbar =>
                          {
                          toolbar.Template(@<text>
                        <div class="toolbar">
                            <a href="javascript:void(0)" onclick="return VT.Util.ClearAllKendoGridFilter();" class="btn btn-primary btn-sm btn-rounded">Clear Filters</a>
                        </div>
                        </text>);
                          })
                          .Events(events => events.DataBound("VT.Util.ConnectKendoGrids"))
                          .DataSource(dataSource => dataSource
                              .Ajax()
                              .PageSize(10)
                              .Model(model => model.Id(p => p.ServiceRecordId))
                              .Read(read => read.Action("GetServiceRecords", "ServiceRecords"))
                          )
                          .ClientDetailTemplateId("ServiceRecordItemListTemplate")
                    )
                </div>
            </div>
        </div>
    </div>
</div>

@Html.Partial("SetCost", new SetServiceRecordItemCostModel())

<div id="divAttachments">
    <!--Load dynamic content through ajax-->
</div>

@Html.Partial("ConfirmModal", new ModalViewModal
{
    Id = "void-service-activity-modal",
    IsAlertModel = false,
    Title = "Void Confirmation",
    Message = "Are you sure	you	want to	VOID this Service Record? This operation CANNOT be undone.",
    YesButtonTitle = "Yes",
    NoButtonTitle = "No"
})

<script id="ServiceRecordItemListTemplate" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<ServiceRecordItemDetail>()
          .Name("ServiceRecordItemListGrid_#=ServiceRecordId#")
          .HtmlAttributes(new { @class = "recordItems", @title = "Services Performed" })
          .Sortable()
          .Columns(columns =>
                   {
                       columns.Bound(o => o.ServiceRecordId).Title("Id").Visible(false);
                       columns.Bound(o => o.ServiceRecordItemId).Width(75).Visible(false); ;
                       columns.Bound(o => o.ServiceName).Title("Service").Width(200);
                       columns.Bound(o => o.Description).Title("Description").Width(500);

                       columns.Template(@<text></text>).Title("Cost")
                           .ClientTemplate("\\#= displayCostOrLink.apply(this, arguments) \\#").Width(75);
                   columns.Template(@<text></text>).Title("Actions")
                        .ClientTemplate("\\#= getImageInfo.apply(this, arguments) \\#").Width(35);
                   })
          .DataSource(dataSource => dataSource
                                    .Ajax()
                                    .Model(model => model.Id(p => p.ServiceRecordItemId))
                                            .Read(read => read.Action("GetServiceRecordItems", "ServiceRecords", new { id = "#=ServiceRecordId#" }))
          )
          .ToClientTemplate())
</script>

<script type="text/javascript">
    $(function () {
        $('#ServiceRecordListGrid').data('kendoGrid');
    })
</script>